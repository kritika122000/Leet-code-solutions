class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n = nums.size();
        int left = 0;
        int right = n-1;
        int mid;
       //binary search method to solve it in O(log n )
        
        while(left <= right)
        {
            mid= (left + right)/2;
            
    
            if(nums[mid] == target)
                return mid;
            
            //now check which side of the mis is strictly increasing
            else if(nums[mid] >= nums[left])
            {
                
                 if(target <= nums[mid] && target >= nums[left])
                        right = mid-1;
                    
                else
                    left = mid +1;
             }
            else
            {
                 if(target >= nums[mid] && target <= nums[right])
                     left = mid +1;
             
                else
                 right = mid-1;
                
            }
        }
                    return -1;
    }
};
