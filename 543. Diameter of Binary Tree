/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
        int diameterOfBinaryTree(TreeNode* root) {
        if(root==nullptr) return 0;
        int result=0;
        func(root,0,0, result);
        return result;
    }
    int func(TreeNode* node, int h1, int h2, int& max){
        if(node->left !=nullptr) h1+=func(node->left , h1, 0, max);
        if(node->right!=nullptr) h2+=func(node->right, 0, h2, max);
        if(h1+h2>max) max=h1+h2;
        if(h1>h2) return h1+1;
        return h2+1;
    }

};
